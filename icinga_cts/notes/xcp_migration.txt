

define service {
  service_description     XCP:LOG_apache_errors
  use                     xcp-service
  hostgroup_name          resxcp-host
  check_command           
  contact_groups          res-team-notify,xcp-notify-group
  servicegroups           Potential_SLA_Impact
  normal_check_interval   5
  }
  define command{
        command_name    check_xcp_apache_errors
        command_line    $USER3$/check_nrpe8k -n -t 60 -H $HOSTNAME$ -c apache_errors
        }

		
		
		
apply Service "XCP:LOG_apache_errors" {
  import "generic-service"
  display_name ="XCP:LOG_apache_errors"
  check_command = "nrpe8k"
  vars.nrpe_no_ssl = false
  vars.nrpe_command = "check_fileage"
  vars.nrpe_timeout = 60
  vars.nrpe_arguments = [ "240", "300", "/opt/comcast/tomcat/logs/xcpreauth.log" ]
  assign where match("*xcp*", host.name)

}		
		
		
		
		
		define service {
  service_description     XCP:metrics
  use                     xcp-service
  hostgroup_name          resxcp-host
  check_command           check_xcp_metrics
  contact_groups          res-team-notify,xcp-notify-group
  servicegroups           Potential_SLA_Impact
  normal_check_interval   5
  }
  
define command{
        command_name    check_xcp_metrics
        command_line    $USER3$/check_nrpe8k -n -t 60 -H $HOSTNAME$ -c xcp_metrics
        }


apply Service "XCP:metrics" {
  import "generic-service"
  display_name ="XCP:metrics"
  check_command = "nrpe8k"
  vars.nrpe_no_ssl = false
  vars.nrpe_command = "xcp_metrics"
  vars.nrpe_timeout = 60
  assign where match("*xcp*", host.name)
}



define service{
        use                             xcp-service
        service_description             XCP:LOGIN_access
        check_command                   check_xcp_login
        hostgroup_name                  resxcp-host
        servicegroups                   Medium_Priority_Issues
        contact_groups                  res-team-notify,xcp-notify-group
        }
		
		 command_line    $USER3$/check_nrpe8k -n -H $HOSTNAME$ -c check_xcp_login
		
  apply Service "XCP:LOGIN_access" {
  import "generic-service"
  display_name ="XCP:LOGIN_access"
  check_command = "nrpe8k"
  vars.nrpe_no_ssl = true
  vars.nrpe_command = "check_xcp_login"
  assign where match("*xcp*", host.name)

}
  
  
  
  
  
  
  
  define service{
        use                             xcp-service
        service_description             XCP:WEBMAIL_access
        check_command                   check_xcp_webmail
        hostgroup_name                  resxcp-host
        servicegroups                   Medium_Priority_Issues
        contact_groups                  res-team-notify,xcp-notify-group
        }
		
		command_line    $USER3$/check_nrpe8k -n -H $HOSTNAME$ -c check_xcp_webmail

  apply Service "XCP:WEBMAIL_access" {
  import "generic-service"
  display_name ="XCP:WEBMAIL_access"
  check_command = "nrpe8k"
  vars.nrpe_no_ssl = true
  vars.nrpe_command = "check_xcp_webmail"
  assign where match("*xcp*", host.name)

}		
		
		
		
		
		define service{
        use                             xcp-service
        service_description             XCP:HTTPD_proc
        check_command                   check_xcp_httpd
        hostgroup_name                  resxcp-host
        servicegroups                   Potential_SLA_Impact
        contact_groups                  res-team-notify,xcp-notify-group
        }
		
		
		define command {
        command_name    check_xcp_httpd
        command_line    $USER3$/check_nrpe8k -n -H $HOSTNAME$ -c check_httpd
}

		
  
  apply Service "XCP:HTTPD_proc" {
  import "generic-service"
  display_name ="XCP:HTTPD_proc"
  check_command = "nrpe8k"
  vars.nrpe_no_ssl = true
  vars.nrpe_command = "check_httpd"
  assign where match("*xcp*", host.name)

}







define service{
        use                             xcp-service
        service_description             XCP:TOMCAT_port_8009
        check_command                   check_xcp_tomcat_8009
        hostgroup_name                  resxcp-host
        servicegroups                   Potential_SLA_Impact
        contact_groups                  res-team-notify,xcp-notify-group
        }
		
		define command{
        command_name    check_xcp_tomcat_8009
        command_line    $USER3$/check_nrpe8k -n -H $HOSTNAME$ -c check_xcp_tomcat_8009
        }

		
		
		 apply Service "XCP:TOMCAT_port_8009" {
  import "generic-service"
  display_name ="XCP:TOMCAT_port_8009"
  check_command = "nrpe8k"
  vars.nrpe_no_ssl = ture
  vars.nrpe_command = "check_xcp_tomcat_8009"
  assign where match("*xcp*", host.name)

}
		
		define service{
        use                             xcp-service
        service_description             XCP:TOMCAT_port_8005
        check_command                   check_xcp_tomcat_8005
        hostgroup_name                  resxcp-host
        servicegroups                   Potential_SLA_Impact
        contact_groups                  res-team-notify,xcp-notify-group
        }
		
  define command{
        command_name    check_xcp_tomcat_8005
        command_line    $USER3$/check_nrpe8k -n -H $HOSTNAME$ -c check_xcp_tomcat_8005
        }

		
		
		apply Service "XCP:TOMCAT_port_8005" {
  import "generic-service"
  display_name ="XCP:TOMCAT_port_8005"
  check_command = "nrpe8k"
  vars.nrpe_no_ssl = true
  vars.nrpe_command = "check_xcp_tomcat_8005"
  assign where match("*xcp*", host.name)

}
		
		define service{
        use                             xcp-service
        service_description             XCP:TOMCAT_proc
        check_command                   check_xcp_tomcat
        hostgroup_name                  resxcp-host
        servicegroups                   Potential_SLA_Impact
        contact_groups                  res-team-notify,xcp-notify-group
        }

  define command{
        command_name    check_xcp_tomcat
        command_line    $USER3$/check_nrpe8k -n -H $HOSTNAME$ -c check_xcp_tomcat
        }

		
		
		 apply Service "XCP:TOMCAT_proc" {
  import "generic-service"
  display_name ="XCP:TOMCAT_proc"
  check_command = "nrpe8k"
  vars.nrpe_no_ssl = true
  vars.nrpe_command = "check_xcp_tomcat"
  assign where match("*xcp*", host.name)

}

		
		define service{
        use                             xcp-service
        service_description             XCP:TCP_port_80
        check_command                   check_tcp!80
        hostgroup_name                  resxcp-host
        servicegroups                   Potential_SLA_Impact
        contact_groups                  res-team-notify,swan-notify-group
        }
		
		
		
		
		
  
  apply Service "XCP:LOG_apache_errors" {
  import "generic-service"
  display_name ="XCP:LOG_apache_errors"
  check_command = "nrpe8k"
  vars.nrpe_no_ssl = false
  vars.nrpe_command = "check_fileage"
  vars.nrpe_timeout = 60
  vars.nrpe_arguments = [ "240", "300", "/opt/comcast/tomcat/logs/xcpreauth.log" ]
  assign where match("*xcp*", host.name)

}
