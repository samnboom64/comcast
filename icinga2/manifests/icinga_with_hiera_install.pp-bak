class icinga2::icinga_with_hiera_install{


        $service_restart = hiera('icinga2::icinga_with_hiera_install::service_restart',[])

	$ido_db_user = hiera('icinga2::icinga_with_hiera_install::ido_db_user')
	$ido_db_pass = hiera('icinga2::icinga_with_hiera_install::ido_db_pass')
	$ido_db_name = hiera('icinga2::icinga_with_hiera_install::ido_db_name')
	$ido_db_schema = hiera('icinga2::icinga_with_hiera_install::ido_db_schema')
	$ido_db_remote_access = hiera('icinga2::icinga_with_hiera_install::ido_db_remote_access')


	$rpm_pre = hiera('icinga2::icinga_with_hiera_install::rpm_pre')
	
	$feature = hiera('icinga2::icinga_with_hiera_install::feature')
	
	$dir = hiera('icinga2::icinga_with_hiera_install::dir')
	$files_templ = hiera('icinga2::icinga_with_hiera_install::files_templ')
	$files = hiera('icinga2::icinga_with_hiera_install::files')
		



yumrepo { 'icinga-stable-release1':
      baseurl        => "http://copasp-po-b01p.sys.comcast.net:38253/resemail/x86_64/6/icinga2/",
      enabled        => 1,
      gpgcheck       => 0,
      descr          => "ICINGA (stable release for epel)",
      alias => 'icinga2-repo-file1',
    }


    

/*
service { mysqld:
        enable => true,
    ensure => running,
    hasrestart => true,
}
*/



###Mysql DB create and Populate

####Create a database/user icinga and give access 
exec { 'create-mysql-icinga2-ido-db1':
    path => '/bin:/usr/bin:/sbin:/usr/sbin',
    unless => "mysql -u$ido_db_user -p$ido_db_pass $ido_db_name",
    command => "mysql -uroot -e \"CREATE DATABASE $ido_db_name ; GRANT ALL ON $ido_db_name.* TO $ido_db_user@localhost IDENTIFIED BY \'$ido_db_pass\';\"",
  	alias => 'create-mysql-icinga2-ido-db',
#	require => Service['mysqld'],
	
}



##populate the mysql schema from mysql data dump

  exec { 'populate-icinga2-ido-mysql-db1':
    path => '/bin:/usr/bin:/sbin:/usr/sbin',
    unless => "mysql -u$ido_db_user -p$ido_db_pass $ido_db_name -e \"SELECT * FROM icinga_dbversion;\" &> /dev/null",
    command => "mysql -u$ido_db_user -p$ido_db_pass $ido_db_name < $ido_db_schema",
  }


        create_resources('icinga2::icinga_with_hiera_install::service_restart',$service_restart)
        create_resources('icinga2::icinga_with_hiera_install::rpm_pre',$rpm_pre)
        create_resources('icinga2::icinga_with_hiera_install::feature',$feature)
        create_resources('icinga2::icinga_with_hiera_install::dir',$dir)
        create_resources('icinga2::icinga_with_hiera_install::files_templ',$files_templ)
        create_resources('icinga2::icinga_with_hiera_install::files',$files)








Yumrepo ['icinga-stable-release1'] -> 
Icinga2::Icinga_with_hiera_install::Rpm_pre <| |> -> 
Icinga2::Icinga_with_hiera_install::Service_restart <| title == 'mysqld' |> -> 
Exec ['create-mysql-icinga2-ido-db1'] -> 
Exec ['populate-icinga2-ido-mysql-db1'] -> 
Icinga2::Icinga_with_hiera_install::Dir <| |> -> 
Icinga2::Icinga_with_hiera_install::Feature <| title == 'api' |> -> 
Icinga2::Icinga_with_hiera_install::Feature <| |> -> 
Icinga2::Icinga_with_hiera_install::Files <| |> -> 
Icinga2::Icinga_with_hiera_install::Files_templ <| |> -> 
Icinga2::Icinga_with_hiera_install::Service_restart <| |>







#adding certificate files for respected host master









#Define to enable icinga2 features (eg:api)

define icinga2::icinga_with_hiera_install::feature ($feature) {
  exec { "${feature}":
    path => '/bin:/usr/bin:/sbin:/usr/sbin',
    unless => "readlink /etc/icinga2/features-enabled/${feature}.conf",
    command => "icinga2 feature enable ${feature}",
  }
}

define icinga2::icinga_with_hiera_install::dir ($dir) {
  file { "$dir":
	ensure => "directory",
	owner => icinga,
  	group => icinga,
  	mode  => 644
  }
}

define icinga2::icinga_with_hiera_install::service_restart ($service){

		service { "$service":
	        enable => true,
   		 ensure => running,
    		hasrestart => true,
}

}


define icinga2::icinga_with_hiera_install::rpm_pre ($rpm)
	{
	package { "$rpm":
	ensure => latest,
    	require => Yumrepo['icinga2-repo-file1'],
}
}



define icinga2::icinga_with_hiera_install::files ($file,$user,$mode) {
  file { "$file":
        ensure => "file",
        owner => $user,
        group => $user,
        mode  => $mode,
        source => "puppet:///modules/icinga2${file}",

  }
}


define icinga2::icinga_with_hiera_install::files_templ ($temp) {
  file { "$temp":
        ensure => "file",
        owner => icinga,
        group => icinga,
        mode  => 644,
	content => template('icinga2/constants_conf.erb'),
  }

}





}

