apply Service "NRPE8k" {
	import "generic-service"
	display_name ="NRPE8k"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "OS:FS_mounts" {
	import "generic-service"
	display_name ="OS:FS_mounts"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_mounts"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "OS:MEMORY_page_swap" {
	import "generic-service"
	display_name ="OS:MEMORY_page_swap"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_pgswp"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "Zimbra Server Metrics Proxy" {
	import "generic-service"
	display_name ="Zimbra Server Metrics"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_zimbra_server_metrics_proxy"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "METRICS:ZIMBRA8_mailbox" {
	import "generic-service"
	display_name ="METRICS:ZIMBRA8_mailbox"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "file_reshproxy_server_metrics"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "METRICS:ZIMBRA8_proxy" {
	import "generic-service"
	display_name ="METRICS:ZIMBRA8_proxy"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "log_reshproxy_server_metrics"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "PROXY:PORT_http_thread_saturation" {
	import "generic-service"
	display_name ="PROXY:PORT_http_thread_saturation"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "zimbra8_http_threadsatcnt"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "HPROXY:JVM_gc" {
	import "generic-service"
	display_name ="HPROXY:JVM_gc"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "zimbra_jvm_gc"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "HPROXY:JVM_gc_minor" {
	import "generic-service"
	display_name ="HPROXY:JVM_gc_minor"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "zimbra_jvm_gcminor"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "HPROXY:JVM_heapsize" {
	import "generic-service"
	display_name ="HPROXY:JVM_heapsize"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "zimbra_jvm_heapsize"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "NET:connections" {
	import "generic-service"
	display_name ="NET:connections"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_all_conns_8k"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "HPROXY:LOG" {
	import "generic-service"
	display_name ="HPROXY:LOG"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_pprxy_z8_log"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "ZIMBRA:SERVICES" {
	import "generic-service"
	display_name ="ZIMBRA:SERVICES"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_status_pprxyzimbra8"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "NTWK:CONNECTIONS_ipv4" {
	import "generic-service"
	display_name ="NTWK:CONNECTIONS_ipv4"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv4_conns_8k"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "NTWK:CONNECTIONS_ipv6" {
	import "generic-service"
	display_name ="NTWK:CONNECTIONS_ipv6"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_conns_8k"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "POP3S:CERTIFICATE_status" {
	import "generic-service"
	display_name ="POP3S:CERTIFICATE_status"
	check_command ="ssl"
	vars.nrpe_no_ssl = true
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "IMAPS:CERTIFICATE_status" {
	import "generic-service"
	display_name ="IMAPS:CERTIFICATE_status"
	check_command ="ssl"
	vars.nrpe_no_ssl = true
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "ZIMBRA:POP_counts" {
	import "generic-service"
	display_name ="ZIMBRA:POP_counts"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_pops"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "NGNIX:WORKER_connections" {
	import "generic-service"
	display_name ="NGNIX:WORKER_connections"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_log_worker_conns"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "ZIMBRA:IMAP_counts" {
	import "generic-service"
	display_name ="ZIMBRA:IMAP_counts"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_imaps"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "Proxy-Default_Gateway:PO" {
	import "generic-service"
	display_name ="Proxy-Default_Gateway:PO"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "prxy_PO_check_gateway"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "Proxy-Default_Gateway:CH2" {
	import "generic-service"
	display_name ="Proxy-Default_Gateway:CH2"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "prxy_CH2_check_gateway"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "Proxy-Default_Gateway:CH2D" {
	import "generic-service"
	display_name ="Proxy-Default_Gateway:CH2D"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "prxy_CH2D_check_gateway"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "IPROXY:LOG" {
	import "generic-service"
	display_name ="IPROXY:LOG"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_pprxy_z8_log"
	vars.nrpe_timeout = 60
	assign where match("*iproxy*", host.name)
}

apply Service "PPROXY:LOG" {
	import "generic-service"
	display_name ="PPROXY:LOG"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_pprxy_z8_log"
	vars.nrpe_timeout = 60
	assign where match("*pproxy*", host.name)
}

apply Service "POP:ACCESS_ipv4" {
	import "generic-service"
	display_name ="POP:ACCESS_ipv4"
	check_command ="pop"
	vars.nrpe_no_ssl = true
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "POPS:ACCESS_ipv4" {
	import "generic-service"
	display_name ="POPS:ACCESS_ipv4"
	check_command ="pop"
	vars.nrpe_no_ssl = true
	vars.nrpe_timeout = 60
	assign where match("*pproxy*", host.name)
}

apply Service "POP:ACCESS_ipv6_po" {
	import "generic-service"
	display_name ="POP:ACCESS_ipv6_po"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_pop"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*pproxy*", host.name)
}

apply Service "POP:ACCESS_ipv6_ch2" {
	import "generic-service"
	display_name ="POP:ACCESS_ipv6_ch2"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_pop"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*proxy*", host.name)
}

apply Service "POPS:ACCESS_ipv6_po" {
	import "generic-service"
	display_name ="POPS:ACCESS_ipv6_po"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_pops"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*pproxy*", host.name)
}

apply Service "POPS:ACCESS_ipv6_ch2" {
	import "generic-service"
	display_name ="POPS:ACCESS_ipv6_ch2"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_pops"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*pproxy*", host.name)
}

apply Service "POP:ACCESS_ipv6_cmcd" {
	import "generic-service"
	display_name ="POP:ACCESS_ipv6_cmcd"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_pop"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*pproxy*", host.name)
}

apply Service "POPS:ACCESS_ipv6_cmcd" {
	import "generic-service"
	display_name ="POPS:ACCESS_ipv6_cmcd"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_pops"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*pproxy*", host.name)
}

apply Service "POP:ACCESS_ipv6_ch2-d" {
	import "generic-service"
	display_name ="POP:ACCESS_ipv6_ch2-d"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_pop"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*pproxy*", host.name)
}

apply Service "POPS:ACCESS_ipv6_ch2-d" {
	import "generic-service"
	display_name ="POPS:ACCESS_ipv6_ch2-d"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_pops"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*pproxy*", host.name)
}

apply Service "HTTP:ACCESS_ipv4" {
	import "generic-service"
	display_name ="HTTP:ACCESS_ipv4"
	check_command ="http"
	vars.nrpe_no_ssl = true
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "HTTPS:ACCESS_ipv4" {
	import "generic-service"
	display_name ="HTTPS:ACCESS_ipv4"
	check_command ="http"
	vars.nrpe_no_ssl = true
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "HTTP:ACCESS_ipv6_po" {
	import "generic-service"
	display_name ="HTTP:ACCESS_ipv6_po"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_http"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*proxy*", host.name)
}

apply Service "HTTP:ACCESS_ipv6_ch2" {
	import "generic-service"
	display_name ="HTTP:ACCESS_ipv6_ch2"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_http"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*proxy*", host.name)
}

apply Service "HTTPS:ACCESS_ipv6_po" {
	import "generic-service"
	display_name ="HTTPS:ACCESS_ipv6_po"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_https"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*proxy*", host.name)
}

apply Service "HTTPS:ACCESS_ipv6_ch2" {
	import "generic-service"
	display_name ="HTTPS:ACCESS_ipv6_ch2"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_https"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*proxy*", host.name)
}

apply Service "HTTP:ACCESS_ipv6_cmcd" {
	import "generic-service"
	display_name ="HTTP:ACCESS_ipv6_cmcd"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_http"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*proxy*", host.name)
}

apply Service "HTTPS:ACCESS_ipv6_cmcd" {
	import "generic-service"
	display_name ="HTTPS:ACCESS_ipv6_cmcd"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_https"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*proxy*", host.name)
}

apply Service "HTTP:ACCESS_ipv6_ch2-d" {
	import "generic-service"
	display_name ="HTTP:ACCESS_ipv6_ch2-d"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_http"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*proxy*", host.name)
}

apply Service "HTTPS:ACCESS_ipv6_ch2-d" {
	import "generic-service"
	display_name ="HTTPS:ACCESS_ipv6_ch2-d"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_https"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*proxy*", host.name)
}

apply Service "IMAP:ACCESS_ipv4" {
	import "generic-service"
	display_name ="IMAP:ACCESS_ipv4"
	check_command ="imap"
	vars.nrpe_no_ssl = true
	vars.nrpe_timeout = 60
	assign where match("*iproxy*", host.name)
}

apply Service "IMAPS:ACCESS_ipv4" {
	import "generic-service"
	display_name ="IMAPS:ACCESS_ipv4"
	check_command ="imap"
	vars.nrpe_no_ssl = true
	vars.nrpe_timeout = 60
	assign where match("*iproxy*", host.name)
}

apply Service "IMAP:ACCESS_ipv6_po" {
	import "generic-service"
	display_name ="IMAP:ACCESS_ipv6_po"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_imap"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*iproxy*", host.name)
}

apply Service "IMAP:ACCESS_ipv6_ch2" {
	import "generic-service"
	display_name ="IMAP:ACCESS_ipv6_ch2"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_imap"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*iproxy*", host.name)
}

apply Service "IMAPS:ACCESS_ipv6_po" {
	import "generic-service"
	display_name ="IMAPS:ACCESS_ipv6_po"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_imaps"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*iproxy*", host.name)
}

apply Service "IMAPS:ACCESS_ipv6_ch2" {
	import "generic-service"
	display_name ="IMAPS:ACCESS_ipv6_ch2"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_imaps"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*iproxy*", host.name)
}

apply Service "IMAP:ACCESS_ipv6_cmcd" {
	import "generic-service"
	display_name ="IMAP:ACCESS_ipv6_cmcd"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_imap"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*iproxy*", host.name)
}

apply Service "IMAPS:ACCESS_ipv6_cmcd" {
	import "generic-service"
	display_name ="IMAPS:ACCESS_ipv6_cmcd"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_imaps"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*iproxy*", host.name)
}

apply Service "IMAP:ACCESS_ipv6_ch2-d" {
	import "generic-service"
	display_name ="IMAP:ACCESS_ipv6_ch2-d"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_imap"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*iproxy*", host.name)
}

apply Service "IMAPS:ACCESS_ipv6_ch2-d" {
	import "generic-service"
	display_name ="IMAPS:ACCESS_ipv6_ch2-d"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ipv6_imaps"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["120", "30", "60", "HOST.ADDRESS"]
	assign where match("*iproxy*", host.name)
}

apply Service "PPROXY:Metric" {
	import "generic-service"
	display_name ="PPROXY:Metric"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "pproxy_metric"
	vars.nrpe_timeout = 60
	assign where match("*pproxy*", host.name)
}

apply Service "PROXY:CONNECTIONS_closewait" {
	import "generic-service"
	display_name ="PROXY:CONNECTIONS_closewait"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "zimbra_cxn_closewait"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "PROXY:FD_Utilization" {
	import "generic-service"
	display_name ="PROXY:FD_Utilization"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_fd_count"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["90", "85", "root"]
	assign where match("*proxy*", host.name)
}

apply Service "PROXY:FD_Utilization_zimbra" {
	import "generic-service"
	display_name ="PROXY:FD_Utilization_zimbra"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_fd_count"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["90", "85", "zimbra"]
	assign where match("*proxy*", host.name)
}

apply Service "PROXY:yhm_http_codes" {
	import "generic-service"
	display_name ="PROXY:yhm_http_codes"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_aproxy_http_codes"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "PROXY:http_codes" {
	import "generic-service"
	display_name ="PROXY:http_codes"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_hproxy_http_codes"
	vars.nrpe_timeout = 60
	assign where match("*proxy*", host.name)
}

apply Service "NET:hproxy_connections" {
	import "generic-service"
	display_name ="NET:hproxy_connections"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ss"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["1000 500"]
	assign where match("*hproxy*", host.name)
}

apply Service "NET:aproxy_connections" {
	import "generic-service"
	display_name ="NET:aproxy_connections"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ss"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["200 100"]
	assign where match("*aproxy*", host.name)
}

apply Service "NET:pproxy_connections" {
	import "generic-service"
	display_name ="NET:pproxy_connections"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "check_ss"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["1000 500"]
	assign where match("*pproxy*", host.name)
}

apply Service "NET:iproxy_connections" {
	import "generic-service"
	display_name ="NET:iproxy_connections"
	check_command ="nrpe8k"
	vars.nrpe_no_ssl = true
	vars.nrpe_command = "EMPTY_HAHA"
	vars.nrpe_timeout = 60
	vars.nrpe_arguments = ["17000 15000"]
	assign where match("*iproxy*", host.name)
}

